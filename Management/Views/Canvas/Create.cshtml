@model DisplayMonkey.Models.Canvas

@{
    ViewBag.Title = Resources.CreateNewCanvas;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.Referrer()

    <fieldset>
        <legend>@Resources.Canvas</legend>
        <table><tr>
        <td>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "pixels" }, }) @Resources.Pixels
            @Html.ValidationMessageFor(model => model.Width)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "pixels" }, }) @Resources.Pixels
            @Html.ValidationMessageFor(model => model.Height)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BackgroundImage)
        </div>
        <div class="editor-field select">
            @Html.DropDownList("BackgroundImage", Resources.NoBackground)
            @Html.ValidationMessageFor(model => model.BackgroundImage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BackgroundColor)
        </div>
        <div class="editor-field">
            @Html.ColorPickerFor(model => model.BackgroundColor)
            @Html.ValidationMessageFor(model => model.BackgroundColor)
        </div>

        <p>
            <input type="submit" value="@Resources.Create" />
        </p>
        </td>
        <td class="preview">
            <div id="canvas" data-path="@Html.Raw(Url.Action("Data", "Canvas"))">
                <div>
                    <img src="@Html.Raw(Url.Action("Thumb", "Media", new { id="nnn", width="qqq", height="qqq" }))" alt="@Resources.Background" />
                </div>
            </div>
        </td>
    </tr></table>
    </fieldset>
}

<div>
    @Html.ActionLink(Resources.ViewCanvases, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jsquery")
    @Scripts.Render("~/bundles/canvas")
    <script type="text/javascript">
        $(document).ready(function() {
            $('input[type=color]').addClass('color {required:false,hash:true,caps:false}');
        });
    </script>
}
