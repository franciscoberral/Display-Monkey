@model DisplayMonkey.Models.Display

@{
    SelectList autoLoadModes = ViewBag.AutoLoadModes as SelectList;
}

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Host)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Host)
            @Html.ValidationMessageFor(model => model.Host)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Canvas)
        </div>
        <div class="editor-field select">
            @Html.DropDownList("CanvasId", ViewBag.Canvases as SelectList)
            @Html.ValidationMessageFor(model => model.CanvasId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field select">
            @Html.DropDownList("LocationId", ViewBag.Locations as SelectList)
            @Html.ValidationMessageFor(model => model.LocationId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ErrorLength)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ErrorLength, new { htmlAttributes = new { @class = "duration" } }) @Resources.Sec
            @Html.ValidationMessageFor(model => model.ErrorLength)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PollInterval)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PollInterval, new { htmlAttributes = new { @class = "duration" } }) @Resources.Sec
            @Html.ValidationMessageFor(model => model.PollInterval)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoScroll)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NoScroll)
            @Html.ValidationMessageFor(model => model.NoScroll)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoCursor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NoCursor)
            @Html.ValidationMessageFor(model => model.NoCursor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReadyTimeout)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReadyTimeout, new { htmlAttributes = new { @class = "duration" } }) @Resources.Sec
            @Html.ValidationMessageFor(model => model.ReadyTimeout)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AutoRefreshAt)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AutoRefreshAt, new { htmlAttributes = new { @class = "timepicker duration" } })
            @Html.ValidationMessageFor(model => model.AutoRefreshAt)
        </div>

        <script type="text/javascript">
            $(document).ready(function () {
                $('input.timepicker').timepicker({
                    'timeFormat': 'G:i',
                    'show2400': false,
                    'noneOption': '@Resources.Never'
                });
            });
        </script>
